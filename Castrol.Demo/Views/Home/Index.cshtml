@model Castrol.Demo.Models.CastrolDataModel
@{
    ViewBag.Title = "Home";
    bool editableData = Convert.ToBoolean(ViewBag.EditableData);
}
<div class="row">
    <div class="col-xs-12">
        <h2>Castrol EVHC Data Entry via FTP</h2>
        <hr />
    </div>
</div>

@if (TempData["ValidationError"] != null)
{
    var alertType = TempData["AlertType"] != null ? TempData["AlertType"] : "danger";
<div class="row">
    <div class="col-xs-12">
        <div class="alert alert-@alertType margin-1000" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <b>Hinweis!</b><br />
            @Html.Raw(TempData["ValidationError"])
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
}
<div class="row">
    <form class="form-horizontal" action="@Url.Action("UploadCastrolData","Home")" method="post">
        @Html.AntiForgeryToken()
            <div class="form-group">
                @Html.LabelFor(x => x.CustomerName, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @if(editableData)
                    {
                        <text>@Html.TextBoxFor(x => x.CustomerName, new { @class = "form-control" })</text>
                    }
                    else
                    {
                        <text>@Html.TextBoxFor(x => x.CustomerName, new { @class = "form-control", @readonly="true" })</text>
                    }

                    <span class="text-danger">@Html.ValidationMessageFor(x => x.CustomerName)</span>
                </div>
            </div>
        
            <div class="form-group">
                @Html.LabelFor(x => x.Vehicle, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                @if (editableData)
                {
                    <text>@Html.TextBoxFor(x => x.Vehicle, new { @class = "form-control" })</text>
                }
                else
                {
                    <text>@Html.TextBoxFor(x => x.Vehicle, new { @class = "form-control", @readonly = "true" })</text>
                }
                    <span class="text-danger">@Html.ValidationMessageFor(x => x.Vehicle)</span>
                </div>
            </div>
        
            <div class="form-group">
                @Html.LabelFor(x => x.VehicleModel, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @if (editableData)
                    {
                        <text>@Html.TextBoxFor(x => x.VehicleModel, new { @class = "form-control" })</text>
                    }
                    else
                    {
                        <text>@Html.TextBoxFor(x => x.VehicleModel, new { @class = "form-control", @readonly = "true" })</text>
                    }
                    <span class="text-danger">@Html.ValidationMessageFor(x => x.VehicleModel)</span>
                </div>
            </div>
        
            <div class="form-group">
                @Html.LabelFor(x => x.Registration, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @if (editableData)
                    {
                        <text>@Html.TextBoxFor(x => x.Registration, new { @class = "form-control" })</text>
                    }
                    else
                    {
                        <text>@Html.TextBoxFor(x => x.Registration, new { @class = "form-control", @readonly = "true" })</text>
                    }
                    <span class="text-danger">@Html.ValidationMessageFor(x => x.Registration)</span>
                </div>
            </div>
        
            <div class="form-group">
                @Html.LabelFor(x => x.WIP, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @if (editableData)
                    {
                        <text>@Html.TextBoxFor(x => x.WIP, new { @class = "form-control" })</text>
                    }
                    else
                    {
                        <text>@Html.TextBoxFor(x => x.WIP, new { @class = "form-control", @readonly = "true" })</text>
                    }
                    <span class="text-danger">@Html.ValidationMessageFor(x => x.WIP)</span>
                </div>
            </div>
        
            <div class="form-group">
                @Html.LabelFor(x => x.EVHCDateTimeIn, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    <div class="input-group date form_datetime col-md-5" data-date="" data-date-format="dd.mm.yyyy hh:ii" data-link-field="dtp_input1">
                        @Html.TextBoxFor(x => x.EVHCDateTimeIn, new { @class = "form-control" })
                        <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span>
                        <span class="input-group-addon"><span class="glyphicon glyphicon-th"></span></span>
                    </div>
                    <input type="hidden" id="dtp_input1" value="" />
                    <br /><br />
                    <div class="text-danger">@Html.ValidationMessageFor(x => x.EVHCDateTimeIn)</div>
                </div>
            </div>
        
            <div class="form-group">
                @Html.LabelFor(x => x.VIN, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @if (editableData)
                    {
                        <text>@Html.TextBoxFor(x => x.VIN, new { @class = "form-control" })</text>
                    }
                    else
                    {
                        <text>@Html.TextBoxFor(x => x.VIN, new { @class = "form-control", @readonly = "true" })</text>
                    }
                    <span class="text-danger">@Html.ValidationMessageFor(x => x.VIN)</span>
                </div>
            </div>
        
            <div class="form-group">
                @Html.LabelFor(x => x.HomePhone, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @if (editableData)
                    {
                        <text>@Html.TextBoxFor(x => x.HomePhone, new { @class = "form-control" })</text>
                    }
                    else
                    {
                        <text>@Html.TextBoxFor(x => x.HomePhone, new { @class = "form-control", @readonly = "true" })</text>
                    }
                    <span class="text-danger">@Html.ValidationMessageFor(x => x.HomePhone)</span>
                </div>
            </div>
        
            <div class="form-group">
                @Html.LabelFor(x => x.Mobile, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @if (editableData)
                    {
                        <text>@Html.TextBoxFor(x => x.Mobile, new { @class = "form-control" })</text>
                    }
                    else
                    {
                        <text>@Html.TextBoxFor(x => x.Mobile, new { @class = "form-control", @readonly = "true" })</text>
                    }
                    <span class="text-danger">@Html.ValidationMessageFor(x => x.Mobile)</span>
                </div>
            </div>
        
            <div class="form-group">
                @Html.LabelFor(x => x.WorkPhone, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @if (editableData)
                    {
                        <text>@Html.TextBoxFor(x => x.WorkPhone, new { @class = "form-control" })</text>
                    }
                    else
                    {
                        <text>@Html.TextBoxFor(x => x.WorkPhone, new { @class = "form-control", @readonly = "true" })</text>
                    }
                    <span class="text-danger">@Html.ValidationMessageFor(x => x.WorkPhone)</span>
                </div>
            </div>
        
            <div class="form-group">
                @Html.LabelFor(x => x.Email, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @if (editableData)
                    {
                        <text>@Html.TextBoxFor(x => x.Email, new { @class = "form-control" })</text>
                    }
                    else
                    {
                        <text>@Html.TextBoxFor(x => x.Email, new { @class = "form-control", @readonly = "true" })</text>
                    }
                    <span class="text-danger">@Html.ValidationMessageFor(x => x.Email)</span>
                </div>
            </div>
        
            <div class="form-group">
                @Html.LabelFor(x => x.Fax, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @if (editableData)
                    {
                        <text>@Html.TextBoxFor(x => x.Fax, new { @class = "form-control" })</text>
                    }
                    else
                    {
                        <text>@Html.TextBoxFor(x => x.Fax, new { @class = "form-control", @readonly = "true" })</text>
                    }
                    <span class="text-danger">@Html.ValidationMessageFor(x => x.Fax)</span>
                </div>
            </div>
        
            <div class="form-group">
                @Html.LabelFor(x => x.SalesAdvisor, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @if (editableData)
                    {
                        <text>@Html.TextBoxFor(x => x.SalesAdvisor, new { @class = "form-control" })</text>
                    }
                    else
                    {
                        <text>@Html.TextBoxFor(x => x.SalesAdvisor, new { @class = "form-control", @readonly = "true" })</text>
                    }
                    <span class="text-danger">@Html.ValidationMessageFor(x => x.SalesAdvisor)</span>
                </div>
            </div>
        
            <div class="form-group">
                @Html.LabelFor(x => x.Mileage, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @if (editableData)
                    {
                        <text>@Html.TextBoxFor(x => x.Mileage, new { @class = "form-control" })</text>
                    }
                    else
                    {
                        <text>@Html.TextBoxFor(x => x.Mileage, new { @class = "form-control", @readonly = "true" })</text>
                    }
                    <span class="text-danger">@Html.ValidationMessageFor(x => x.Mileage)</span>
                </div>
            </div>
            
        <div class="form-group">
                @Html.LabelFor(x => x.DateVehicleFirstRegistered, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @if (editableData)
                    {
                        <text>@Html.TextBoxFor(x => x.DateVehicleFirstRegistered, new { @class = "form-control" })</text>
                    }
                    else
                    {
                        <text>@Html.TextBoxFor(x => x.DateVehicleFirstRegistered, new { @class = "form-control", @readonly = "true" })</text>
                    }
                    <span class="text-danger">@Html.ValidationMessageFor(x => x.DateVehicleFirstRegistered)</span>
                </div>
            </div>
         
        <div class="form-group">
                @Html.LabelFor(x => x.ContactPhone, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @if (editableData)
                    {
                        <text>@Html.TextBoxFor(x => x.ContactPhone, new { @class = "form-control" })</text>
                    }
                    else
                    {
                        <text>@Html.TextBoxFor(x => x.ContactPhone, new { @class = "form-control", @readonly = "true" })</text>
                    }
                    <span class="text-danger">@Html.ValidationMessageFor(x => x.ContactPhone)</span>
                </div>
            </div>
           
        <div class="form-group">
                @Html.LabelFor(x => x.CarDateTimeDueOut, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @if (editableData)
                    {
                        <text>@Html.TextBoxFor(x => x.CarDateTimeDueOut, new { @class = "form-control" })</text>
                    }
                    else
                    {
                        <text>@Html.TextBoxFor(x => x.CarDateTimeDueOut, new { @class = "form-control", @readonly = "true" })</text>
                    }
                    <span class="text-danger">@Html.ValidationMessageFor(x => x.CarDateTimeDueOut)</span>
                </div>
            </div>
            
        <div class="form-group">
                @Html.LabelFor(x => x.CustomerWaiting, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @if (editableData)
                    {
                        <text>@Html.TextBoxFor(x => x.CustomerWaiting, new { @class = "form-control" })</text>
                    }
                    else
                    {
                        <text>@Html.TextBoxFor(x => x.CustomerWaiting, new { @class = "form-control", @readonly = "true" })</text>
                    }
                    <span class="text-danger">@Html.ValidationMessageFor(x => x.CustomerWaiting)</span>
                </div>
            </div>

        @*FTP Anmeldedaten*@
        @if (string.IsNullOrEmpty(Model.UserID) || string.IsNullOrEmpty(Model.UserName))
        {
            @Html.HiddenFor(m =>m.CreateNewFTPCredentials)
            <h3>Bitte geben Sie Ihre FTP Anmeldedaten ein.</h3>
            <hr />

            <div class="form-group">
                @Html.LabelFor(model => model.UserID, htmlAttributes: new { @class = "control-label col-sm-3" })
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.UserID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-sm-3" })
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserPassword, htmlAttributes: new { @class = "control-label col-sm-3" })
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.UserPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserPassword, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            @Html.HiddenFor(m => m.UserID)
            @Html.HiddenFor(m => m.UserName)
            @Html.HiddenFor(m => m.UserPassword)
        }

        <div class="form-group">
            <div class="col-sm-offset-3 col-sm-9">
                <button type="submit" class="btn btn-danger">Upload</button>
            </div>
        </div>
</form>
</div>
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    $('.form_datetime').datetimepicker({
        language:  'en',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        forceParse: 0,
        showMeridian: 1
    });
</script>
}